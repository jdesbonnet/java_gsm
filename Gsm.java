/*
 *
 * Gsm
 *
 */
import java.io.*;
import java.lang.*;

class Gsm
{
static final int GSM_FRAME = 33;
static final int AU_FRAME = 160;
static final int FAC[] = { 18431, 20479, 22527, 24575, 26623, 28671, 30719, 32767 };
static int LARc[] = new int [16];
static int xmaxc[] = new int [4];
static int  xmc[] = new int [4 * 13];
static int bc[] = new int [4];
static int Mc[] = new int [4];
static int Nc[] = new int [4];
static int dp0[] = new int [280]; //[ 280 ];
static int LARpp[] = new int [2*8];//[2][8];    /*                              */
static int j = 0;              /*                              */
static int target[]  =  new int [160];
static int nrp = 40 ; /* 40 */   /* long_term.c, synthesis       */
static int v[] = new int [9] ;//[9];           /* short_term.c, synthesis      */
static int msr;            /* decoder.c,   Postprocessing  */
static final int MAGIC = 0xd;
static final int size = 160;
static final int MIN_WORD = -32767 - 1;
static final int MAX_WORD = 32767;
static int lsize;
static final int gsm_QLB[] = { 3277, 11469, 21299, 32767 };
static final int s2u[] = {
0377,  0376,  0375,  0374,  0373,  0372,  0371,  0370,  0367,  0366,  0365,  0364,  0363,  0362,  0361,  
0360,  0357,  0357,  0356,  0356,  0355,  0355,  0354,  0354,  0353,  0353,  0352,  0352,  0351,  0351,  
0350,  0350,  0347,  0347,  0346,  0346,  0345,  0345,  0344,  0344,  0343,  0343,  0342,  0342,  0341,  
0341,  0340,  0340,  0337,  0337,  0337,  0337,  0336,  0336,  0336,  0336,  0335,  0335,  0335,  0335,  
0334,  0334,  0334,  0334,  0333,  0333,  0333,  0333,  0332,  0332,  0332,  0332,  0331,  0331,  0331,  
0331,  0330,  0330,  0330,  0330,  0327,  0327,  0327,  0327,  0326,  0326,  0326,  0326,  0325,  0325,  
0325,  0325,  0324,  0324,  0324,  0324,  0323,  0323,  0323,  0323,  0322,  0322,  0322,  0322,  0321,  
0321,  0321,  0321,  0320,  0320,  0320,  0320,  0317,  0317,  0317,  0317,  0317,  0317,  0317,  0317,  
0316,  0316,  0316,  0316,  0316,  0316,  0316,  0316,  0315,  0315,  0315,  0315,  0315,  0315,  0315,  
0315,  0314,  0314,  0314,  0314,  0314,  0314,  0314,  0314,  0313,  0313,  0313,  0313,  0313,  0313,  
0313,  0313,  0312,  0312,  0312,  0312,  0312,  0312,  0312,  0312,  0311,  0311,  0311,  0311,  0311,  
0311,  0311,  0311,  0310,  0310,  0310,  0310,  0310,  0310,  0310,  0310,  0307,  0307,  0307,  0307,  
0307,  0307,  0307,  0307,  0306,  0306,  0306,  0306,  0306,  0306,  0306,  0306,  0305,  0305,  0305,  
0305,  0305,  0305,  0305,  0305,  0304,  0304,  0304,  0304,  0304,  0304,  0304,  0304,  0303,  0303,  
0303,  0303,  0303,  0303,  0303,  0303,  0303,  0302,  0302,  0302,  0302,  0302,  0302,  0302,  0302,  
0301,  0301,  0301,  0301,  0301,  0301,  0301,  0301,  0300,  0300,  0300,  0300,  0300,  0300,  0300,  
0300,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  0277,  
0277,  0277,  0276,  0276,  0276,  0276,  0276,  0276,  0276,  0276,  0276,  0276,  0276,  0276,  0276,  
0276,  0276,  0276,  0275,  0275,  0275,  0275,  0275,  0275,  0275,  0275,  0275,  0275,  0275,  0275,  
0275,  0275,  0275,  0275,  0274,  0274,  0274,  0274,  0274,  0274,  0274,  0274,  0274,  0274,  0274,  
0274,  0274,  0274,  0274,  0274,  0273,  0273,  0273,  0273,  0273,  0273,  0273,  0273,  0273,  0273,  
0273,  0273,  0273,  0273,  0273,  0273,  0272,  0272,  0272,  0272,  0272,  0272,  0272,  0272,  0272,  
0272,  0272,  0272,  0272,  0272,  0272,  0272,  0271,  0271,  0271,  0271,  0271,  0271,  0271,  0271,  
0271,  0271,  0271,  0271,  0271,  0271,  0271,  0271,  0270,  0270,  0270,  0270,  0270,  0270,  0270,  
0270,  0270,  0270,  0270,  0270,  0270,  0270,  0270,  0270,  0267,  0267,  0267,  0267,  0267,  0267,  
0267,  0267,  0267,  0267,  0267,  0267,  0267,  0267,  0267,  0267,  0266,  0266,  0266,  0266,  0266,  
0266,  0266,  0266,  0266,  0266,  0266,  0266,  0266,  0266,  0266,  0266,  0265,  0265,  0265,  0265,  
0265,  0265,  0265,  0265,  0265,  0265,  0265,  0265,  0265,  0265,  0265,  0265,  0264,  0264,  0264,  
0264,  0264,  0264,  0264,  0264,  0264,  0264,  0264,  0264,  0264,  0264,  0264,  0264,  0263,  0263,  
0263,  0263,  0263,  0263,  0263,  0263,  0263,  0263,  0263,  0263,  0263,  0263,  0263,  0263,  0262,  
0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  0262,  
0262,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  0261,  
0261,  0261,  0260,  0260,  0260,  0260,  0260,  0260,  0260,  0260,  0260,  0260,  0260,  0260,  0260,  
0260,  0260,  0260,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  
0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  0257,  
0257,  0257,  0257,  0257,  0257,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  
0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  0256,  
0256,  0256,  0256,  0256,  0256,  0256,  0256,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  
0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  
0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0255,  0254,  0254,  0254,  0254,  0254,  0254,  
0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  
0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0254,  0253,  0253,  0253,  0253,  
0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  
0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0253,  0252,  0252,  
0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  
0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  0252,  
0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  
0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  0251,  
0251,  0251,  0251,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  
0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  0250,  
0250,  0250,  0250,  0250,  0250,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  
0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  0247,  
0247,  0247,  0247,  0247,  0247,  0247,  0247,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  
0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  
0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0246,  0245,  0245,  0245,  0245,  0245,  0245,  
0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  
0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0245,  0244,  0244,  0244,  0244,  
0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  
0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0244,  0243,  0243,  
0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  
0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  0243,  
0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  
0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  0242,  
0242,  0242,  0242,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  
0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  0241,  
0241,  0241,  0241,  0241,  0241,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  
0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  0240,  
0240,  0240,  0240,  0240,  0240,  0240,  0240,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  
0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  
0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  
0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  
0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0237,  0236,  0236,  0236,  0236,  
0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  
0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  
0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  
0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  0236,  
0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  
0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  
0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  
0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  0235,  
0235,  0235,  0235,  0235,  0235,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  
0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  
0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  
0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  
0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0234,  0233,  0233,  0233,  0233,  0233,  0233,  
0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  
0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  
0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  
0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0233,  0232,  0232,  
0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  
0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  
0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  
0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  0232,  
0232,  0232,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  
0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  
0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  
0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  0231,  
0231,  0231,  0231,  0231,  0231,  0231,  0231,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  
0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  
0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  
0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  
0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0230,  0227,  0227,  0227,  0227,  
0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  
0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  
0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  
0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  0227,  
0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  
0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  
0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  
0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  0226,  
0226,  0226,  0226,  0226,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  
0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  
0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  
0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  
0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0225,  0224,  0224,  0224,  0224,  0224,  0224,  
0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  
0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  
0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  
0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0224,  0223,  0223,  
0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  
0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  
0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  
0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  0223,  
0223,  0223,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  
0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  
0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  
0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  0222,  
0222,  0222,  0222,  0222,  0222,  0222,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  
0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  
0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  
0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  
0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0221,  0220,  0220,  0220,  0220,  
0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  
0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  
0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  
0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  0220,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  
0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0217,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  0216,  
0216,  0216,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  
0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0215,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  0214,  
0214,  0214,  0214,  0214,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  
0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0213,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  0212,  
0212,  0212,  0212,  0212,  0212,  0212,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  0211,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  
0210,  0210,  0210,  0210,  0210,  0210,  0210,  0210,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  0207,  
0207,  0207,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  
0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0206,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  0205,  
0205,  0205,  0205,  0205,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  
0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0204,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  0203,  
0203,  0203,  0203,  0203,  0203,  0203,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  
0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0202,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  
0201,  0201,  0201,  0201,  0201,  0201,  0201,  0201,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  0200,  
0200,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  
0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0000,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  0001,  
0001,  0001,  0001,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  
0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0002,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  0003,  
0003,  0003,  0003,  0003,  0003,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  
0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0004,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  0005,  
0005,  0005,  0005,  0005,  0005,  0005,  0005,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  0006,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  
0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0007,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  0010,  
0010,  0010,  0010,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  
0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0011,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  0012,  
0012,  0012,  0012,  0012,  0012,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  
0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0013,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  0014,  
0014,  0014,  0014,  0014,  0014,  0014,  0014,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  0015,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  
0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0016,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  0017,  
0017,  0017,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  
0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  
0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  
0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  0020,  
0020,  0020,  0020,  0020,  0020,  0020,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  
0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  
0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  
0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  
0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0021,  0022,  0022,  0022,  0022,  
0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  
0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  
0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  
0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  0022,  
0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  
0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  
0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  
0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  0023,  
0023,  0023,  0023,  0023,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  
0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  
0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  
0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  
0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0024,  0025,  0025,  0025,  0025,  0025,  0025,  
0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  
0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  
0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  
0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0025,  0026,  0026,  
0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  
0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  
0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  
0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  0026,  
0026,  0026,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  
0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  
0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  
0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  0027,  
0027,  0027,  0027,  0027,  0027,  0027,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  
0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  
0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  
0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  
0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0030,  0031,  0031,  0031,  0031,  
0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  
0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  
0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  
0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  0031,  
0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  
0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  
0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  
0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  0032,  
0032,  0032,  0032,  0032,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  
0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  
0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  
0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  
0033,  0033,  0033,  0033,  0033,  0033,  0033,  0033,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  
0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  
0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  
0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  
0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0034,  0035,  0035,  
0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  
0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  
0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  
0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  0035,  
0035,  0035,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  
0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  
0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  
0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  0036,  
0036,  0036,  0036,  0036,  0036,  0036,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  
0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  
0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  
0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  
0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0037,  0040,  0040,  0040,  0040,  0040,  
0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  
0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0040,  0041,  0041,  
0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  
0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  0041,  
0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  
0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  0042,  
0042,  0042,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  
0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  0043,  
0043,  0043,  0043,  0043,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  
0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  0044,  
0044,  0044,  0044,  0044,  0044,  0044,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  
0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  
0045,  0045,  0045,  0045,  0045,  0045,  0045,  0045,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  
0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  
0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0046,  0047,  0047,  0047,  0047,  0047,  
0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  
0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0047,  0050,  0050,  
0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  
0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  0050,  
0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  
0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  0051,  
0051,  0051,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  
0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  0052,  
0052,  0052,  0052,  0052,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  
0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  0053,  
0053,  0053,  0053,  0053,  0053,  0053,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  
0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  
0054,  0054,  0054,  0054,  0054,  0054,  0054,  0054,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  
0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  
0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0055,  0056,  0056,  0056,  0056,  0056,  
0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  
0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0056,  0057,  0057,  0057,  
0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  
0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  0057,  
0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  0060,  
0060,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  0061,  
0061,  0061,  0062,  0062,  0062,  0062,  0062,  0062,  0062,  0062,  0062,  0062,  0062,  0062,  0062,  
0062,  0062,  0062,  0063,  0063,  0063,  0063,  0063,  0063,  0063,  0063,  0063,  0063,  0063,  0063,  
0063,  0063,  0063,  0063,  0064,  0064,  0064,  0064,  0064,  0064,  0064,  0064,  0064,  0064,  0064,  
0064,  0064,  0064,  0064,  0064,  0065,  0065,  0065,  0065,  0065,  0065,  0065,  0065,  0065,  0065,  
0065,  0065,  0065,  0065,  0065,  0065,  0066,  0066,  0066,  0066,  0066,  0066,  0066,  0066,  0066,  
0066,  0066,  0066,  0066,  0066,  0066,  0066,  0067,  0067,  0067,  0067,  0067,  0067,  0067,  0067,  
0067,  0067,  0067,  0067,  0067,  0067,  0067,  0067,  0070,  0070,  0070,  0070,  0070,  0070,  0070,  
0070,  0070,  0070,  0070,  0070,  0070,  0070,  0070,  0070,  0071,  0071,  0071,  0071,  0071,  0071,  
0071,  0071,  0071,  0071,  0071,  0071,  0071,  0071,  0071,  0071,  0072,  0072,  0072,  0072,  0072,  
0072,  0072,  0072,  0072,  0072,  0072,  0072,  0072,  0072,  0072,  0072,  0073,  0073,  0073,  0073,  
0073,  0073,  0073,  0073,  0073,  0073,  0073,  0073,  0073,  0073,  0073,  0073,  0074,  0074,  0074,  
0074,  0074,  0074,  0074,  0074,  0074,  0074,  0074,  0074,  0074,  0074,  0074,  0074,  0075,  0075,  
0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  0075,  
0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  0076,  
0076,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  0077,  
0077,  0077,  0100,  0100,  0100,  0100,  0100,  0100,  0100,  0100,  0101,  0101,  0101,  0101,  0101,  
0101,  0101,  0101,  0102,  0102,  0102,  0102,  0102,  0102,  0102,  0102,  0103,  0103,  0103,  0103,  
0103,  0103,  0103,  0103,  0104,  0104,  0104,  0104,  0104,  0104,  0104,  0104,  0105,  0105,  0105,  
0105,  0105,  0105,  0105,  0105,  0106,  0106,  0106,  0106,  0106,  0106,  0106,  0106,  0107,  0107,  
0107,  0107,  0107,  0107,  0107,  0107,  0110,  0110,  0110,  0110,  0110,  0110,  0110,  0110,  0111,  
0111,  0111,  0111,  0111,  0111,  0111,  0111,  0112,  0112,  0112,  0112,  0112,  0112,  0112,  0112,  
0113,  0113,  0113,  0113,  0113,  0113,  0113,  0113,  0114,  0114,  0114,  0114,  0114,  0114,  0114,  
0114,  0115,  0115,  0115,  0115,  0115,  0115,  0115,  0115,  0116,  0116,  0116,  0116,  0116,  0116,  
0116,  0116,  0117,  0117,  0117,  0117,  0117,  0117,  0117,  0117,  0120,  0120,  0120,  0120,  0121,  
0121,  0121,  0121,  0122,  0122,  0122,  0122,  0123,  0123,  0123,  0123,  0124,  0124,  0124,  0124,  
0125,  0125,  0125,  0125,  0126,  0126,  0126,  0126,  0127,  0127,  0127,  0127,  0130,  0130,  0130,  
0130,  0131,  0131,  0131,  0131,  0132,  0132,  0132,  0132,  0133,  0133,  0133,  0133,  0134,  0134,  
0134,  0134,  0135,  0135,  0135,  0135,  0136,  0136,  0136,  0136,  0137,  0137,  0137,  0137,  0140,  
0140,  0141,  0141,  0142,  0142,  0143,  0143,  0144,  0144,  0145,  0145,  0146,  0146,  0147,  0147,  
0150,  0150,  0150,  0151,  0151,  0152,  0152,  0153,  0153,  0154,  0154,  0155,  0155,  0156,  0156,  
0157,  0157,  0160,  0161,  0162,  0163,  0164,  0165,  0166,  0167,  0170,  0171,  0172,  0173,  0174,  
0175,  0176
};


/*
#define GSM_ADD(a, b)   \
	((ulongword)((ltmp = (longword)(a) + (longword)(b)) - MIN_WORD) > \
		MAX_WORD - MIN_WORD ? (ltmp > 0 ? MAX_WORD : MIN_WORD) : ltmp)
*/
   
   public static void readTable(InputStream in) throws IOException 
     {
	// read in s2u[] table
	//in.readFully(s2u); 
     }
   
	private static int  add (int a, int b)
	{
	
		int  sum = a + b;

		if ( sum >  (MAX_WORD))
			return  MAX_WORD;
		else
		if ( sum <  (MIN_WORD))
			return  MIN_WORD;
		return  sum;
	}
  
private static  int sub (int a, int b)
	{
		int diff = a - b;
		return saturate(diff);
	}
private static  int saturate(int x)
	{
	
		if (x < MIN_WORD)
			return  MIN_WORD;
		else
			if (x > MAX_WORD)
				return  MAX_WORD;
			else return  x;
	}
private static  int asl (int a, int n)
	{
		if (n >= 16) return 0;
		if (n <= -16) return (a < 0 ? -1 : 0);//-(a < 0);
		if (n < 0) return asr(a, -n);
		return (a << n);
	}

private static  int asr (int a, int n)
	{
		if (n >= 16) return ((a < 0) ? -1 : 0);
		if (n <= -16) return 0;
		if (n < 0) return  (a << -n) ;

		return (a >> n);
	}
private static  int MULT_R(int a, int b) /* word a= word b, !(a == b == MIN_WORD) */   
	{
		return (((a) * (b) + 16384) >> 15);
	}


   	
	static byte[] decompress (byte[] in, byte[] out) {
	   return decompress(in,out,0);
	}
   
	// gsm s, gsm_byte  c, gsm_signal  target
	static byte[] decompress (byte[] in, byte[] out, int offset)
	{
	int p = offset;
	   
	// Change this to return silent packet (or throw an exception!)
	if (((in[0] >> 4) & 0x0F) != MAGIC) {
	   // return null;
	}
	   
	   
	LARc[0]  = ((in[p++] & 0xF) << 2);           /* 1 */
	LARc[0] |= ((in[p] >> 6) & 0x3);
	LARc[1]  = (in[p++] & 0x3F);
	LARc[2]  = ((in[p]>> 3) & 0x1F);
	LARc[3]  = ((in[p++] & 0x7) << 2);
	LARc[3] |= ((in[p]>> 6) & 0x3);
	LARc[4]  = ((in[p]>> 2) & 0xF);
	LARc[5]  = ((in[p++] & 0x3) << 2);
	LARc[5] |= ((in[p]>> 6) & 0x3);
	LARc[6]  = ((in[p]>> 3) & 0x7);
	LARc[7]  = (in[p++] & 0x7);
	Nc[0]  = ((in[p]>> 1) & 0x7F);
	bc[0]  = ((in[p++] & 0x1) << 1) | ((in[p]>> 7) & 0x1);
	Mc[0]  = ((in[p]>> 5) & 0x3);
	xmaxc[0]  = ((in[p++] & 0x1F) << 1);
	xmaxc[0] |= ((in[p]>> 7) & 0x1);
	xmc[0]  = ((in[p]>> 4) & 0x7);
	xmc[1]  = ((in[p]>> 1) & 0x7);
	xmc[2]  = ((in[p++] & 0x1) << 2);
	xmc[2] |= ((in[p]>> 6) & 0x3);  
	xmc[3]  = ((in[p]>> 3) & 0x7);
	xmc[4]  = (in[p++] & 0x7);
	xmc[5]  = ((in[p]>> 5) & 0x7);
	xmc[6]  = ((in[p]>> 2) & 0x7);
	xmc[7]  = ((in[p++] & 0x3) << 1);            /* 10 */
	xmc[7] |= ((in[p]>> 7) & 0x1);
	xmc[8]  = ((in[p]>> 4) & 0x7);
	xmc[9]  = ((in[p]>> 1) & 0x7);
	xmc[10]  = ((in[p++] & 0x1) << 2);
	xmc[10] |= ((in[p]>> 6) & 0x3);
	xmc[11]  = ((in[p]>> 3) & 0x7);
	xmc[12]  = (in[p++] & 0x7);
	Nc[1]  = ((in[p]>> 1) & 0x7F);
	bc[1]  = ((in[p++] & 0x1) << 1) | ((in[p]>> 7) & 0x1);
	Mc[1]  = ((in[p]>> 5) & 0x3);
	xmaxc[1]  = ((in[p++] & 0x1F) << 1);
	xmaxc[1] |= ((in[p]>> 7) & 0x1);
	xmc[13]  = ((in[p]>> 4) & 0x7);
	xmc[14]  = ((in[p]>> 1) & 0x7);
	xmc[15]  = ((in[p++] & 0x1) << 2);
	xmc[15] |= ((in[p]>> 6) & 0x3);
	xmc[16]  = ((in[p]>> 3) & 0x7);
	xmc[17]  = (in[p++] & 0x7);
	xmc[18]  = ((in[p]>> 5) & 0x7);
	xmc[19]  = ((in[p]>> 2) & 0x7);
	xmc[20]  = ((in[p++] & 0x3) << 1);
	xmc[20] |= ((in[p]>> 7) & 0x1);
	xmc[21]  = ((in[p]>> 4) & 0x7);
	xmc[22]  = ((in[p]>> 1) & 0x7);
	xmc[23]  = ((in[p++] & 0x1) << 2);
	xmc[23] |= ((in[p]>> 6) & 0x3);
	xmc[24]  = ((in[p]>> 3) & 0x7);
	xmc[25]  = (in[p++] & 0x7);
	Nc[2]  = ((in[p]>> 1) & 0x7F);
	bc[2]  = ((in[p++] & 0x1) << 1) | ((in[p]>> 7) & 0x1);
	Mc[2]  = ((in[p]>> 5) & 0x3);
	xmaxc[2]  = ((in[p++] & 0x1F) << 1);
	xmaxc[2] |= ((in[p]>> 7) & 0x1);
	xmc[26]  = ((in[p]>> 4) & 0x7);
		xmc[27]  = ((in[p]>> 1) & 0x7);
		xmc[28]  = ((in[p++] & 0x1) << 2);
		xmc[28] |= ((in[p]>> 6) & 0x3);
		xmc[29]  = ((in[p]>> 3) & 0x7);
		xmc[30]  = (in[p++] & 0x7);
		xmc[31]  = ((in[p]>> 5) & 0x7);
		xmc[32]  = ((in[p]>> 2) & 0x7);
		xmc[33]  = ((in[p++] & 0x3) << 1);
		xmc[33] |= ((in[p]>> 7) & 0x1);
		xmc[34]  = ((in[p]>> 4) & 0x7);
		xmc[35]  = ((in[p]>> 1) & 0x7);
		xmc[36]  = ((in[p++] & 0x1) << 2);
		xmc[36] |= ((in[p]>> 6) & 0x3);
		xmc[37]  = ((in[p]>> 3) & 0x7);
		xmc[38]  = (in[p++] & 0x7);
		Nc[3]  = ((in[p]>> 1) & 0x7F);
		bc[3]  = ((in[p++] & 0x1) << 1) | ((in[p]>> 7) & 0x1);
		Mc[3]  = ((in[p]>> 5) & 0x3);
		xmaxc[3]  = ((in[p++] & 0x1F) << 1);
		xmaxc[3] |= ((in[p]>> 7) & 0x1);
		xmc[39]  = ((in[p]>> 4) & 0x7);
		xmc[40]  = ((in[p]>> 1) & 0x7);
		xmc[41]  = ((in[p++] & 0x1) << 2);
		xmc[41] |= ((in[p]>> 6) & 0x3);
		xmc[42]  = ((in[p]>> 3) & 0x7);
		xmc[43]  = (in[p++] & 0x7);                  /* 30  */
		xmc[44]  = ((in[p]>> 5) & 0x7);
		xmc[45]  = ((in[p]>> 2) & 0x7);
		xmc[46]  = ((in[p++] & 0x3) << 1);
		xmc[46] |= ((in[p]>> 7) & 0x1);
		xmc[47]  = ((in[p]>> 4) & 0x7);
		xmc[48]  = ((in[p]>> 1) & 0x7);
		xmc[49]  = ((in[p++] & 0x1) << 2);
		xmc[49] |= ((in[p]>> 6) & 0x3);
		xmc[50]  = ((in[p]>> 3) & 0x7);
		xmc[51]  = (in[p]& 0x7);                    /* 33 */

			 //s= LARc= Nc= bc= Mc= xmaxc= xmc= target
	   Decoder(out);


		return out;
	}
	private static void Decoder(byte out[])
		/*struct gsm_state        * S=

	word            * LARcr,        /* [0..7]               IN      

	word            * Ncr,          /* [0..3]               IN      /
	word            * bcr,          /* [0..3]               IN      /
	word            * Mcr,          /* [0..3]               IN      /
	word            * xmaxcr,       /* [0..3]               IN      /
	word            * xMcr,         /* [0..13*4]            IN      /

	word            * s)            /* [0..159]             OUT     */
{
		int             j, k;
		int LARc, Ncr, bc, Mcr, xmaxcr, xMcr;
		int  erp[] = new int [40];
		int wt[] = new int [160];
		//word            * drp = S->dp0 + 120;
		LARc= Ncr= bc= Mcr= xmaxcr= xMcr = 0 ;

   for (j=0; j <= 3; j++, xmaxcr++, bc++, Ncr++, Mcr++, xMcr+= 13) {

      Gsm_RPE_Decoding(xmaxcr, Mcr, xMcr, erp );
      Gsm_Long_Term_Synthesis_Filtering(Ncr, bc, erp);
			
      System.arraycopy(dp0, 120, wt,40*j,40);

      /*for (k = 0; k <= 39; k++)
	wt[ j * 40 + k ] =  dp0[120 + k ];*/
   }
   Gsm_Short_Term_Synthesis_Filter(wt);
   Postprocessing(out);
}       
private static  void Gsm_Short_Term_Synthesis_Filter (int[] wt)
/*      struct gsm_state * S,

	word    * LARcr,        /* received log area ratios [0..7] IN  *
	word    * wt,           /* received d [0..159]             IN  *

	word    * s             /* signal   s [0..159]            OUT  */

{
		//word            * LARpp_j       = S->LARpp[ S->j     ];
		//word            * LARpp_j_1     = S->LARpp[ S->j ^=1 ];
  
		int  LARpp_j       = (j*8);
		int  LARpp_j_1  =  ((j ^=1 )*8);

		int LARp[] = new int [8];
		Decoding_of_the_coded_Log_Area_Ratios(LARpp_j );
   
		Coefficients_0_12( LARpp_j_1, LARpp_j, LARp );
		LARp_to_rp( LARp );
		Short_term_synthesis_filtering(LARp, 13, wt, 0 );

		Coefficients_13_26( LARpp_j_1, LARpp_j, LARp);
		LARp_to_rp( LARp );
		Short_term_synthesis_filtering(LARp, 14, wt, 13 );

		Coefficients_27_39( LARpp_j_1, LARpp_j, LARp);
		LARp_to_rp( LARp );
		Short_term_synthesis_filtering(LARp, 13, wt, 27 );
	
		Coefficients_40_159( LARpp_j, LARp );
		LARp_to_rp( LARp );
		Short_term_synthesis_filtering(LARp, 120, wt, 40);
	}

private static void Short_term_synthesis_filtering (int []rrp, int k,int[] wt,int sr)
/*      struct gsm_state * S,
	register word   * rrp,  /* [0..7]       IN      *
	register int    k,      /* k_end - k_start      *
	register word   * wt,   /* [0..k-1]     IN      *
	register word   * sr    /* [0..k-1]     OUT     *
)
*/      {
	//      register word           * v = S->v;
		int            i,_wt = sr;
		int sri, tmp1, tmp2;
		// register longword       ltmp;   /* for GSM_ADD  & GSM_SUB */
	
		while (k-- != 0) {
			sri = wt[_wt++];
			for (i = 8; i-- != 0;) {
				/* sri = GSM_SUB( sri= gsm_mult_r( rrp[i]= v[i] ) );
				 */
				tmp1 = rrp[i];
				tmp2 = v[i];
				
				if ( tmp1 == MIN_WORD && tmp2 == MIN_WORD)
					tmp2 = MAX_WORD;
				else
					tmp2 =  ( (( tmp1 * tmp2 + 16384) >> 15)) ;
				
				sri  = sub( sri, tmp2 );

				/* v[i+1] = GSM_ADD( v[i]= gsm_mult_r( rrp[i]= sri ) );
				 */
				
				if ( tmp1 == MIN_WORD && sri == MIN_WORD )
					tmp1 =  MAX_WORD;
				else
					tmp1 = ((( tmp1 * sri + 16384) >> 15)) ;
				

				v[i+1] = add( v[i], tmp1);
			}
			target[sr++] =  v[0] = sri;
		}
	}



private static  void LARp_to_rp (int LARp[])
	//register word * LARp)   /* [0..7] IN/OUT  */
	/*
	 *  The input of this procedure is the interpolated LARp[0..7] array.
	 *  The reflection coefficients= rp[i], are used in the analysis
	 *  filter and in the synthesis filter.
	 */
	{
		int            i,p = 0;
		int             temp;
		long ltmp;

		for (i = 1; i <= 8; i++, p++) {

			/* temp = GSM_ABS( *LARp );
			 *
			 * if (temp < 11059) temp <<= 1;
			 * else if (temp < 20070) temp += 11059;
			 * else temp = GSM_ADD( temp >> 2= 26112 );
			 *
			 * *LARp = *LARp < 0 ? -temp : temp;
			 */

			if (LARp[p] < 0) { 
				if (LARp[p] == MIN_WORD )
					temp = MAX_WORD;
				else
					temp = (-(LARp[p]));

					if (temp < 11059)
						LARp[p] = (- (temp << 1));
					else
						
						if (temp < 20070)
							LARp[p] = (-(temp + 11059));
						else
							LARp[p] = (-add( (temp >> 2), 26112 ));
			} else {
				temp  = LARp[p];                        
				if (temp < 11059)
					LARp[p] = (temp << 1);
				else
						if (temp < 20070) 
							LARp[p] = ( temp + 11059);
						else
							LARp[p] = (add( (temp >> 2), 26112 ));
			}
		}
	}


private static  void Coefficients_0_12 (int LARpp_j_1, int LARpp_j, int [] LARp)
		/*register word * LARpp_j_1,
		register word * LARpp_j,
		register word * LARp)*/
	{

		int    i,q=0;
		int t;
//              longword ltmp;

			//word            * LARpp_j       = S->LARpp[ S->j     ];
		//word            * LARpp_j_1     = S->LARpp[ S->j ^=1 ];

		for (i = 1; i <= 8; i++, q++, LARpp_j_1++, LARpp_j++) {
			t = add( ( LARpp[LARpp_j_1] >> 2 ), ( LARpp[LARpp_j] >> 2 ));
			LARp[q] = add( t,  ( LARpp[LARpp_j_1] >> 1));
		}
	}

private static  void Coefficients_13_26(int LARpp_j_1, int LARpp_j, int [] LARp)
	{
		int i,q = 0;
		
		//register longword ltmp;
		for (i = 1; i <= 8; i++, LARpp_j_1++, LARpp_j++, q++) {
			LARp[q] = add( ( LARpp[LARpp_j_1] >> 1), ( LARpp[LARpp_j] >> 1 ));
		}
	}

private static  void Coefficients_27_39(int LARpp_j_1, int LARpp_j, int [] LARp)
	{
		int i,q = 0;
		int t;

		for (i = 1; i <= 8; i++, LARpp_j_1++, LARpp_j++, q++) {
			t = add( ( LARpp[LARpp_j_1] >> 2 ),  (LARpp[LARpp_j] >> 2 ));
			LARp[q] = add( t, ( LARpp[LARpp_j] >> 1 ));
		}
	}

private static  void Coefficients_40_159( int LARpp_j, int [] LARp)
	{
		int i,q = 0;

		System.arraycopy(LARpp,LARpp_j,LARp,0,8);
		/*for (i = 1; i <= 8; i++, q++, LARpp_j++)
			LARp[q] = LARpp[LARpp_j];*/
	}


private static  void Gsm_Long_Term_Synthesis_Filtering(int Ncr,int bcr,int[] erp)
	/*struct gsm_state        * S,

		word                    Ncr,
		word                    bcr,
		register word           * erp,     /* [0..39]                    IN *
		register word           * drp      /* [-120..-1] IN, [-120..40] OUT */

/*
 *  This procedure uses the bcr and Ncr parameter to realize the
 *  long term synthesis filtering.  The decoding of bcr needs
 *  table 4.3b.
 */
	{
		//word            * drp = S->dp0 + 120;
		//register longword       ltmp;   /* for ADD */
		int            k, Nr;
		int brp, drpp;

		/*  Check the limits of Nr.
		 */
		int t =  Nc[Ncr];
		Nr =  (120 - (t < 40 || t > 120 ? nrp : t));
		nrp = Nr;
		//assert(Nr >= 40 && Nr <= 120);

		/*  Decoding of the LTP gain bcr
		 */
		brp = gsm_QLB[ bc[bcr] ];
	
		/*  Computation of the reconstructed int term residual 
		 *  signal drp[0..39]
		 */
//              assert(brp != MIN_WORD);

		for (k = 0; k <= 39; k++) {
			drpp  = MULT_R( brp, dp0[Nr + k] );
			dp0[120+k] = add( erp[k], drpp );
		}

		/*
		 *  Update of the reconstructed int term residual signal
		 *  drp[ -1..-120 ]
		 */
		// + 120 - 120 = 0
		System.arraycopy(dp0, 40,dp0, 0,120);

		//for (k = 0; k <= 119; k++) dp0[k] = dp0[ -80 + 120 + k ];
	}

private static  void Gsm_RPE_Decoding (int xmaxcr, int Mcr, int xMcr, int erp[])
	{
		int  exp[] = new int [1];
		int  mant[] = new int [1];
		int  xMp[] = new int [ 13 ];

		APCM_quantization_xmaxc_to_exp_mant( xmaxcr, exp, mant );
		APCM_inverse_quantization( xMcr, mant, exp, xMp);
		RPE_grid_positioning( Mcr, xMp, erp );
		return;
	}
private static  void RPE_grid_positioning (int Mcr,int[] xMp,int []erp)
	/*word            Mc=             /* grid position        IN      *
	register word   * xMp,          /* [0..12]              IN      *
	register word   * ep            /* [0..39]              OUT     */

/*
 *  This procedure computes the reconstructed long term residual signal
 *  ep[0..39] for the LTP analysis filter.  The inputs are the Mc
 *  which is the grid position selection and the xMp[0..12] decoded
 *  RPE samples which are upsampled by a factor of 3 by inserting zero
 *  values.
 */
	{
		int     i = 13;
		int p = 0 ,q = 0;
		


		for (i = 0; i <= 39; i++) erp[i] = 0;
		for (i = 0; i <= 12; i++) {
			erp[ Mc[Mcr] + (3*i) ] = xMp[i];
		}
		
	}


private static  void APCM_inverse_quantization (int xMcr,int mant[],int [] exp, int [] xMp)
	/*register word   * xMcr=  /* [0..12]                      IN      /
	word            mant,
	word            exp,
	register word   * xMp)  /* [0..12]                      OUT     */
/* 
 *  This part is for decoding the RPE sequence of coded xMcr[0..12]
 *  samples to obtain the xMp[0..12] array.  Table 4.6 is used to get
 *  the mantissa of xmaxc (FAC[0..7]).
 */
{
	int     i, xMpr = 0;
	int temp, temp1, temp2, temp3;
	//longword        ltmp;

	//assert( mant >= 0 && mant <= 7 ); 

		temp1 = FAC[ mant[0] ];//        /* see 4.2-15 for mant */
		temp2 = sub( 6, exp[0] );      /* see 4.2-15 for exp  */
		temp3 = asl( 1, sub( temp2, 1 ));


		/* temp = gsm_sub( *xMcr++ << 1= 7 ); */
		//error fix me  temp = (xMc[xMcr++] << 1) - 7;               /* restore sign   */
		//      assert( temp <= 7 && temp >= -7 );      /* 4 bit signed   */
		
		for (i = 13; i != 0; i--) {

			//assert( *xMcr <= 7 && *xMcr >= 0 );       /* 3 bit unsigned */

		/* temp = gsm_sub( *xMcr++ << 1= 7 ); */
		//error fix me  temp = (xMc[xMcr++] << 1) - 7;               /* restore sign   */
		//      assert( temp <= 7 && temp >= -7 );      /* 4 bit signed   */

		
			temp = ((xmc[xMcr++] << 1) -  7); 
			temp <<=  12;                            /* 16 bit signed  */
			temp = MULT_R( temp1, temp );
			temp = add( temp, temp3 );
			xMp[xMpr++] = asr( temp, temp2 );
		}
	}



private static  void APCM_quantization_xmaxc_to_exp_mant        (int xmaxcr,int exp_out[],int mant_out[])
	/*word            xmaxcr=          /* IN   /
	word            * exp_out,      /* OUT  /
	word            * mant_out )    /* OUT  */
	{
		int    exp, mant;

		/* Compute exponent and mantissa of the decoded version of xmaxcr
		 */

		exp = 0;
		if (xmaxc[xmaxcr] > 15) exp = ((xmaxc[xmaxcr] >> 3) - 1); // SASR
		mant = (xmaxc[xmaxcr] - (exp << 3));

		if (mant == 0) {
			exp  = -4;
			mant = 7;
		}
		else {
			while (mant <= 7) {
				mant = (mant << 1 | 1);
				exp--;
			}
			mant -= 8;
		}

		/*assert( exp  >= -4 && exp <= 6 );
	0       assert( mant >= 0 && mant <= 7 );
*/
		exp_out[0]  = exp;
		mant_out[0] = mant;
	}
	
private static  void Decoding_of_the_coded_Log_Area_Ratios (int LARppp)
	/*word    * LARc,         /* coded log area ratio [0..7]  IN      *
	word    * LARpp)        /* out: decoded ..                      */
{
	int temp1, temp2,p=0;
	// long   ltmp;   /* for GSM_ADD */

	/*  This procedure requires for efficient implementation
	 *  two tables.
	 *
	 *  INVA[1..8] = integer( (32768 * 8) / real_A[1..8])
	 *  MIC[1..8]  = minimum value of the LARc[1..8]
	 */

	/*  Compute the LARpp[1..8]
	 */

	/*      for (i = 1; i <= 8; i++, B++, MIC++, INVA++, LARc++, LARpp++) {
	 *
	 *              temp1  = GSM_ADD( *LARc= *MIC ) << 10;
	 *              temp2  = *B << 1;
	 *              temp1  = GSM_SUB( temp1= temp2 );
	 *
	 *              assert(*INVA != MIN_WORD);
	 *
	 *              temp1  = GSM_MULT_R( *INVA= temp1 );
	 *              *LARpp = GSM_ADD( temp1= temp1 );
	 *      }
	 */
/*
#undef  STEP
#define STEP( B, MIC, INVA )    \
		temp1    = GSM_ADD( *LARc++= MIC ) << 10;       \
		temp1    = GSM_SUB( temp1, B << 1 );            \
		temp1    = GSM_MULT_R( INVA, temp1 );           \
		*LARpp++ = GSM_ADD( temp1, temp1 );

	STEP(      0,  -32,  13107 );
	STEP(      0,  -32,  13107 );
	STEP(   2048,  -16,  13107 );
	STEP(  -2560,  -16,  13107 );

	STEP(     94,   -8,  19223 );
	STEP(  -1792,   -8,  17476 );
	STEP(   -341,   -4,  31454 );
	STEP(  -1144,   -4,  29708 );
*/
	//      STEP(      0,  -32,  13107 );
		temp1    = (add( LARc[p++], (-32) ) << 10);
		temp1    = sub( temp1, (0 << 1 ));
		temp1    = MULT_R( 13107, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );

	//      STEP(      0,  -32,  13107 );
		temp1    = (add( LARc[p++], -32 ) << 10);
		temp1    = sub( temp1, (0 << 1 ));
		temp1    = MULT_R( 13107, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );
	
	//      STEP(   2048,  -16,  13107 );
		temp1    = (add( LARc[p++], -16 ) << 10);
		temp1    = sub( temp1,(2048 << 1 ));
		temp1    = MULT_R( 13107, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );

	//      STEP(  -2560,  -16,  13107 );

		temp1    = (add( LARc[p++], -16 ) << 10);
		temp1    = sub( temp1, (-2560 << 1 ));
		temp1    = MULT_R( 13107, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );

//              STEP(     94,   -8,  19223 );

		temp1    = (add( LARc[p++], -8 ) << 10);
		temp1    = sub( temp1, (94 << 1 ));
		temp1    = MULT_R( 19223, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );

//              STEP(  -1792,   -8,  17476 );

		temp1    = (add( LARc[p++], -8 ) << 10);
		temp1    = sub( temp1, (-1792 << 1 ));
		temp1    = MULT_R( 17476, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );

	//      STEP(   -341,   -4,  31454 );
		temp1    = (add( LARc[p++], -4 ) << 10);
		temp1    = sub( temp1, (-341 << 1 ));
		temp1    = MULT_R( 31454, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );

//              STEP(  -1144,   -4,  29708 );

		temp1    = (add( LARc[p++], -4 ) << 10);
		temp1    = sub( temp1, (-1144 << 1 ));
		temp1    = MULT_R( 29708, temp1 );
		LARpp[LARppp++] = add( temp1, temp1 );



	/* NOTE: the addition of *MIC is used to restore
	 *       the sign of *LARc.
	 */
}
private static  void Postprocessing(byte out[])
	{
		int            k,i = 0;
		int           mr = msr;
		int           tmp;

		for (k = 160; k-- != 0; i++) {
			tmp = MULT_R( mr, 28180 );
			mr = add(target[i], tmp);            /* Deemphasis             */
			out[i]  = (byte) s2u[((char)(add(mr, mr) & 0xFFF8) >> 3)];  /* Truncation & Upscaling */
		}
		msr = mr;
	}

/**
* read a gsm encoded header (.ge) from a data stream
* @return number  of uncompressed data  bytes
*/
public  static int header (DataInputStream dis)  throws IOException  {

      int head[] = new int [6];
      
      if ( dis.available() < 6*4) 
	throw new IOException ( "Header: Bad Input Stream Header:");
      DataInputStream din = new DataInputStream(dis);
      for ( int i = 0; i < 6; ){
	 head[i++] = (int) din.readInt();
      }
      if (head[0] != 0x04030201 ) /* Encoded GSM format */
	throw new IOException ( "Not a valid Encoded GSM header:");
      
      if (head[1] > 24 ) { // read padding
	 int skip = (head[1] - 24);      
	 dis.skip( skip);
      }
      return head[2]; // Data Length
   
   }
	
	
}


